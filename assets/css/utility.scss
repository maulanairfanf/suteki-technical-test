@import '@/assets/css/variable.scss';

@mixin button-style($bg-color, $color) {
	background-color: $bg-color;
	color: $color;
	border: 1px solid $color;
	padding: 10px 20px;
	text-decoration: none;
	display: inline-block;
	font-size: 14px;
	cursor: pointer;
	border-radius: 5px;
}

.button {
	@include button-style(map-get($colors, primary), white);
}

.button-outline {
	@include button-style(white, map-get($colors, primary));
}

.container {
	max-width: 80%;
	margin: 0 auto;
	padding: 20px;
}

.bg-blue-sky {
	background-color: map-get($colors, blue-sky);
}

.text-white {
	color: white;
}

.w-full {
	width: 100%;
}

.h-full {
	height: 100%;
}

.hide-on-mobile {
	@media (max-width: $mobile-breakpoint) {
		display: none;
	}
}

@each $name, $size in $font-sizes {
	.font-size-#{$name} {
		font-size: $size;
	}
}

@mixin grid-container($columns, $gap, $responsive) {
	display: grid;
	grid-template-columns: repeat($columns, 1fr);
	gap: $gap;

	@if $responsive {
		@media (max-width: $mobile-breakpoint) {
			@if $columns == 4 {
				grid-template-columns: repeat(2, 1fr);
			} @else if $columns == 2 {
				grid-template-columns: repeat(1, 1fr);
			} @else {
				grid-template-columns: repeat(1, 1fr);
			}
		}
	}
}

@mixin grid-item($span) {
	grid-column: span $span;
}

@each $col in $columns {
	@each $gap in $gaps {
		.grid-#{$col}-#{$gap}-no-responsive {
			@include grid-container($col, $gap, false);
		}
	}
}

@each $col in $columns {
	@each $gap in $gaps {
		.grid-#{$col}-#{$gap} {
			@include grid-container($col, $gap, true);
		}
	}
}

@for $i from 1 through 6 {
	.grid-item-#{$i} {
		@include grid-item($i);
	}
}

@mixin margin($size) {
	margin: $size;
}

@mixin margin-top($size) {
	margin-top: $size;
}

@mixin margin-right($size) {
	margin-right: $size;
}

@mixin margin-bottom($size) {
	margin-bottom: $size;
}

@mixin margin-left($size) {
	margin-left: $size;
}

@each $name, $size in $margin-sizes {
	.m-#{$name} {
		@include margin($size);
	}

	.mt-#{$name} {
		@include margin-top($size);
	}

	.mr-#{$name} {
		@include margin-right($size);
	}

	.mb-#{$name} {
		@include margin-bottom($size);
	}

	.ml-#{$name} {
		@include margin-left($size);
	}

	.mx-#{$name} {
		margin-left: $size;
		margin-right: $size;
	}

	.my-#{$name} {
		margin-top: $size;
		margin-bottom: $size;
	}
}

@mixin padding($size) {
	padding: $size;
}

@mixin padding-top($size) {
	padding-top: $size;
}

@mixin padding-right($size) {
	padding-right: $size;
}

@mixin padding-bottom($size) {
	padding-bottom: $size;
}

@mixin padding-left($size) {
	padding-left: $size;
}

@mixin padding-horizontal($size) {
	padding-left: $size;
	padding-right: $size;
}

@mixin padding-vertical($size) {
	padding-top: $size;
	padding-bottom: $size;
}

@each $name, $size in $padding-sizes {
	.p-#{$name} {
		@include padding($size);
	}

	.pt-#{$name} {
		@include padding-top($size);
	}

	.pr-#{$name} {
		@include padding-right($size);
	}

	.pb-#{$name} {
		@include padding-bottom($size);
	}

	.pl-#{$name} {
		@include padding-left($size);
	}

	.px-#{$name} {
		@include padding-horizontal($size);
	}

	.py-#{$name} {
		@include padding-vertical($size);
	}
}

@each $name, $color in $colors {
	.text-#{$name} {
		color: $color;
	}
}

@each $name, $color in $colors {
	.bg-#{$name} {
		background-color: $color;
	}
}

@mixin border-radius($key) {
	$radius: map-get($border-radius-values, $key);

	border-radius: $radius;
}

@each $key in map-keys($border-radius-values) {
	.radius-#{$key} {
		@include border-radius($key);
	}
}

@mixin flex($direction: row, $align: center, $justify: center) {
	display: flex;
	flex-direction: $direction;
	align-items: map-get($align-items, $align);
	justify-content: map-get($justify-content, $justify);
}

.flex {
	@include flex();
}

.flex-wrap {
	flex-wrap: wrap;
}

.flex-row {
	@include flex(row);
}

.flex-column {
	@include flex(column);
}

.items-center {
	@include flex(row, center);
}

.items-start {
	@include flex(row, start);
}

.items-end {
	@include flex(row, end);
}

.items-baseline {
	@include flex(row, baseline);
}

.items-stretch {
	@include flex(row, stretch);
}

.justify-center {
	@include flex(row, center, center);
}

.justify-start {
	@include flex(row, center, start);
}

.justify-end {
	@include flex(row, center, end);
}

.justify-between {
	@include flex(row, center, between);
}

.justify-around {
	@include flex(row, center, around);
}

.justify-evenly {
	@include flex(row, center, evenly);
}
